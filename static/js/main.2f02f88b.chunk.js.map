{"version":3,"sources":["SimpleMap.js","App.js","index.js"],"names":["markerStyle","position","top","left","transform","SimpleMap","location","undefined","this","props","handleMarkerClick","style","height","width","bootstrapURLKeys","key","defaultCenter","center","defaultZoom","zoom","locations","map","item","to","lat","lng","src","process","icon","alt","onClick","React","Component","defaultProps","require","App","myRef","createRef","current","innerHTML","id","street","city","postcode","country","className","split","minSize","defaultSize","ref","rootElement","document","getElementById","ReactDOM","render"],"mappings":"y7BAKMA,EAAc,CAChBC,SAAU,WACVC,IAAK,OACLC,KAAM,MACNC,UAAW,0BAGTC,E,uKAUF,SAAkBC,QACVC,IAAcC,KAAKC,MAAMC,mBACzBF,KAAKC,MAAMC,kBAAkBJ,K,oBAIrC,WAAU,IAAD,OACL,OAEI,aADA,CACA,OAAKK,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAAtC,SACI,cAAC,IAAD,CACIC,iBAAkB,CAAEC,IAAK,2CACzBC,cAAeR,KAAKC,MAAMQ,OAC1BC,YAAaV,KAAKC,MAAMU,KAH5B,SAKKX,KAAKC,MAAMW,UAAUC,KAAI,SAAAC,GACtB,OACI,cAAC,IAAD,CAAMC,GAAI,IAAKC,IAAKF,EAAKE,IAAKC,IAAKH,EAAKG,IAAxC,SACI,qBAAKd,MAAOX,EAAa0B,IAAKC,wBAA+BL,EAAKM,KAAMC,IAAI,MAAMC,QAAS,kBAAM,EAAKpB,kBAAkBY,mB,GA5BhIS,IAAMC,WAAxB3B,EACK4B,aAAe,CAClBvB,uBAAmBH,EACnBU,OAAQ,CACJO,IAAK,KACLC,KAAM,KAEVN,KAAM,IAsCCd,Q,QCnDTe,EAAYc,EAAQ,IAsCXC,E,kDAlCd,WAAY1B,GAAQ,IAAD,8BAClB,cAAMA,IACD2B,MAAQL,IAAMM,YAFD,E,qDAKnB,SAAkB/B,QACZC,IAAcC,KAAK4B,YAAW7B,IAAcC,KAAK4B,MAAME,UAC3D9B,KAAK4B,MAAME,QAAQC,UAAY,sCAEpBjC,EAASkC,GAFW,qCAIdlC,EAASkB,IAJK,+BAKblB,EAASmB,IALI,mCAOhBnB,EAASmC,OAPO,0BAQlBnC,EAASoC,KARS,8BASdpC,EAASqC,SATK,6BAUfrC,EAASsC,QAVM,Y,oBAejC,WAAU,IAAD,OACR,OACC,qBAAKC,UAAU,MAAf,SACC,eAAC,IAAD,CAAWC,MAAM,WAAWC,QAAS,IAAKC,YAAa,IAAvD,UACC,qBAAKC,IAAKzC,KAAK4B,QACf,cAAC,EAAD,CAAWhB,UAAWA,EAAWV,kBAAmB,SAACJ,GAAD,OAAc,EAAKI,kBAAkBJ,e,GA7B5EyB,IAAMC,WCKlBkB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACR,cAAC,IAAD,UACC,cAAC,EAAD,MAEDJ,K","file":"static/js/main.2f02f88b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GoogleMapReact from \"google-map-react\"\r\nimport PropTypes from 'prop-types';\r\n\r\nconst markerStyle = {\r\n    position: \"absolute\",\r\n    top: \"100%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -100%)\"\r\n};\r\n\r\nclass SimpleMap extends React.Component {\r\n    static defaultProps = {\r\n        handleMarkerClick: undefined,\r\n        center: {\r\n            lat: 53.5,\r\n            lng: -2.3\r\n        },\r\n        zoom: 12\r\n    };\r\n\r\n    handleMarkerClick(location) {\r\n        if (undefined !== this.props.handleMarkerClick) {\r\n            this.props.handleMarkerClick(location);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            // Important! Always set the container height explicitly\r\n            <div style={{ height: \"100vh\", width: \"100%\" }}>\r\n                <GoogleMapReact\r\n                    bootstrapURLKeys={{ key: \"AIzaSyBeQJKcfrMZkXf3kRJZZkD34V3rnM-IgYI\" /* https://console.cloud.google.com/google/maps-apis/credentials?project=hvpdjsoft */ }}\r\n                    defaultCenter={this.props.center}\r\n                    defaultZoom={this.props.zoom} >\r\n\r\n                    {this.props.locations.map(item => {\r\n                        return (\r\n                            <Link to={\"/\"} lat={item.lat} lng={item.lng}>\r\n                                <img style={markerStyle} src={process.env.PUBLIC_URL + '/' + item.icon} alt=\"pin\" onClick={() => this.handleMarkerClick(item)} />\r\n                            </Link>\r\n                        );\r\n                    })}\r\n\r\n                </GoogleMapReact>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSimpleMap.propTypes = {\r\n    handleMarkerClick: PropTypes.func,\r\n    zoom: PropTypes.number,\r\n    center: PropTypes.object\r\n};\r\n\r\nexport default SimpleMap;","import './App.css';\n\nimport React from \"react\";\nimport SimpleMap from './SimpleMap';\nimport SplitPane from 'react-split-pane';\n\nconst locations = require(\"./locations.json\");\n\nclass App extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.myRef = React.createRef();\n\t}\n\n\thandleMarkerClick(location) {\n\t\tif ((undefined !== this.myRef) && (undefined !== this.myRef.current)) {\n\t\t\tthis.myRef.current.innerHTML = `Clicked on: <br>`\n\t\t\t\t+ `<br>`\n\t\t\t\t+ `id = ${location.id} <br>`\n\t\t\t\t+ `<br>`\n\t\t\t\t+ `latitude = ${location.lat} <br>`\n\t\t\t\t+ `longitude = ${location.lng} <br>`\n\t\t\t\t+ `<br>`\n\t\t\t\t+ `street = ${location.street} <br>`\n\t\t\t\t+ `city = ${location.city} <br>`\n\t\t\t\t+ `postcode = ${location.postcode} <br>`\n\t\t\t\t+ `country = ${location.country} <br>`\n\t\t\t\t+ ``;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<SplitPane split=\"vertical\" minSize={200} defaultSize={200}>\n\t\t\t\t\t<div ref={this.myRef} />\n\t\t\t\t\t<SimpleMap locations={locations} handleMarkerClick={(location) => this.handleMarkerClick(location)} />\n\t\t\t\t</SplitPane>\n\t\t\t</div>\n\t\t);\n\t};\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<App />\n\t</BrowserRouter>,\n\trootElement\n);\n"],"sourceRoot":""}